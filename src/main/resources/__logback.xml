<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${CONSOLE_LOG_THRESHOLD}</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <!-- <charset>${CONSOLE_LOG_CHARSET}</charset> -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <if condition='"TRUE".equalsIgnoreCase("${ENABLE_ECS_CONSOLE}")'>
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="co.elastic.logging.logback.EcsEncoder">
                <serviceName>${ECS_SERVICE_NAME: ${APP_NAME}}</serviceName>
                <serviceVersion>${ECS_SERVICE_VERSION: ${APP_VERSION}}</serviceVersion>
                <serviceEnvironment>${ENV}</serviceEnvironment>
            </encoder>
        </appender>
    </if>

    <appender name="ASYNC_STDOUT"
              class="ch.qos.logback.classic.AsyncAppender">
        <neverBlock>true</neverBlock>
        <queueSize>20000</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="STDOUT"/>
    </appender>

    <appender name="ASYNC_FILE" class="ch.qos.logback.core.helpers.NOPAppender"/>
    <if condition='"TRUE".equalsIgnoreCase("${ENABLE_FILE_APPENDER}")'>
        <then>
            <property name="LOG_FILE"
                      value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/logback.log}"/>

            <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>${FILE_LOG_THRESHOLD}</level>
                </filter>
                <encoder>
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                    <charset>${FILE_LOG_CHARSET}</charset>
                </encoder>
                <file>${LOG_FILE}</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                    <fileNamePattern>${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}</fileNamePattern>
                    <cleanHistoryOnStart>${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}</cleanHistoryOnStart>
                    <maxFileSize>${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}</maxFileSize>
                    <totalSizeCap>${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}</totalSizeCap>
                    <maxHistory>${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-7}</maxHistory>
                </rollingPolicy>
            </appender>

            <appender name="ASYNC_FILE"
                      class="ch.qos.logback.classic.AsyncAppender">
                <neverBlock>true</neverBlock>
                <queueSize>20000</queueSize>
                <discardingThreshold>0</discardingThreshold>
                <appender-ref ref="FILE"/>
            </appender>

        </then>
    </if>

    <root level="INFO">
        <appender-ref ref="ASYNC_STDOUT" />
        <appender-ref ref="ASYNC_FILE" />
    </root>

</configuration>
