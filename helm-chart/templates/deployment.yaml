apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace }}
  labels:
    App: {{ .Values.deployment.name }}
  annotations:
    {{- toYaml .Values.deployment.annotations | nindent 4 }}

spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      App: {{ .Values.deployment.name }}
  template:
    metadata:
      labels:
        App: {{ .Values.deployment.name }}
        force-recreate: {{ randAlphaNum 5 | quote }}
    spec:
      serviceAccountName: {{ include "atm-layer-model.serviceAccountName" . }}
      volumes:
      {{- if .Values.secretProviderClass.enabled }}
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true 
          volumeAttributes:
            secretProviderClass: {{ .Values.secretProviderClass.name }}
      {{- end }}
      containers:
        - name: {{ .Values.deployment.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: {{ .Values.service.port }}
          imagePullPolicy: Always
          env:
            - name: TZ
              value: Europe/Rome
            - name: MODEL_DB_TYPE
              value: "{{ .Values.database.type }}"
            - name: MODEL_DB_URL
              value: "{{ .Values.database.url }}"
            {{- if .Values.database.credentialsSecretEnabled }}
            - name: MODEL_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.credentialsSecretName }}
                  key: {{ .Values.database.credentialsSecretKeys.username }}
            - name: MODEL_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.credentialsSecretName }}
                  key: {{ .Values.database.credentialsSecretKeys.password }}
            {{- end }}
            - name: MODEL_OBJECT_STORE_REGION
              value: "{{ .Values.objectStore.region }}"
            - name: MODEL_OBJECT_STORE_TYPE
              value: "{{ .Values.objectStore.type }}"
            - name: MODEL_OBJECT_STORE_BUCKET_NAME
              value: "{{ .Values.objectStore.bucket_name }}"
            - name: MODEL_OBJECT_STORE_BPMN_TEMPLATE_PATH
              value: "{{ .Values.objectStore.bpmn_template_path }}"
            - name: MODEL_OBJECT_STORE_WORKFLOW_RESOURCE_TEMPLATE_PATH
              value: "{{ .Values.objectStore.workflow_resource_path }}"
            - name: MODEL_OBJECT_STORE_RESOURCE_TEMPLATE_PATH
              value: "{{ .Values.objectStore.resource_template_path }}"
            - name: MODEL_PROCESS_BASE_PATH
              value: "{{ .Values.modelProcessBasePath }}"
            - name: CDN_OFFSET_PATH
              value: "{{ .Values.cdn.offset_path }}"
            - name: TRACING_ENABLED
              value: "{{ .Values.tracing.enabled }}"
            - name: TRACING_ENDPOINT_BASE_PATH
              value: "{{ .Values.tracing.endpointBasePath }}"
            - name: TRACING_ENABLE_JDBC_MONITORING
              value: "{{ .Values.tracing.enableJDBCMonitoring }}"
            - name: ALLOWED_CROSS_ORIGINS
              value: "{{ .Values.allowedCrossOrigins }}"
            {{- if .Values.cdn.credentialsSecretEnabled }}
            - name: CDN_BASE_PATH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cdn.credentialsSecretName }}
                  key: {{ .Values.cdn.credentialsSecretKeys.cdn_base_path }}
            {{- end }}
          volumeMounts:
          {{- if .Values.secretProviderClass.enabled }}
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"
            readOnly: true
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
  strategy:
    type: Recreate
